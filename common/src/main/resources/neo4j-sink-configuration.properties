##
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
neo4j.cdc.source-id.topics=Type: List<String>;\nDescription: The topic(s) that contain CDC events generated by a Source instance of this connector using `CDC` source strategy.
neo4j.cdc.source-id.label-name=Type: String;\nDescription: The label name attached to the nodes managed by the `CDC Source Id` strategy.
neo4j.cdc.source-id.property-name=Type: String;\nDescription: The id property name attached to the nodes managed by the `CDC Source Id` strategy.
neo4j.cdc.schema.topics=Type: List<String>;\nDescription: The topic(s) that contain CDC events generated by a Source instance of this connector using `CDC` source strategy.
neo4j.cud.topics=Type: List<String>;\nDescription: The topic(s) that that contain CUD events.
neo4j.pattern.merge-node-properties=Type: Boolean;\nDescription: Whether to merge incoming properties with existing properties of nodes (when using `Node Pattern` strategy) \
  or relationship start and end nodes (when using `Relationship Pattern` strategy).
neo4j.pattern.merge-relationship-properties=Type: Boolean;\nDescription: Whether to merge incoming properties with existing properties of relationships \
  (when using `Relationship Pattern` strategy).
neo4j.batch-size=Type: Integer;\nDescription: Maximum number of messages processed per transaction per topic.
neo4j.batch-timeout=Type: Duration;\nDescription: Maximum amount of time a batch is allowed to be processed (valid units are: `ms`, `s`, `m`, `h` and `d`; default unit is `s`).
neo4j.cypher.bind-timestamp-as=Type: String;\nDescription: Under what name message timestamp will be bound in user provided Cypher statements.
neo4j.cypher.bind-header-as=Type: String;\nDescription: Under what name message header will be bound in user provided Cypher statements.
neo4j.cypher.bind-key-as=Type: String;\nDescription: Under what name message key will be bound in user provided Cypher statements.
neo4j.cypher.bind-value-as=Type: String;\nDescription: Under what name message value will be bound in user provided Cypher statements.
neo4j.cypher.bind-value-as-event=Type: Boolean;\nDescription: Whether message value will be bound as 'event' in user provided Cypher statements for backward compatibility.
neo4j.pattern.bind-timestamp-as=Type: String;\nDescription: Under what name message timestamp will be bound in patterns.
neo4j.pattern.bind-header-as=Type: String;\nDescription: Under what name message header will be bound in patterns.
neo4j.pattern.bind-key-as=Type: String;\nDescription: Under what name message key will be bound in patterns.
neo4j.pattern.bind-value-as=Type: String;\nDescription: Under what name message value will be bound in patterns.
