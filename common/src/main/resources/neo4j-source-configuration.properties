##
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
neo4j.source-strategy=Type: Enum<QUERY, CDC>;\nDescription: Source strategy for this connector.
neo4j.batch-size=Type: Integer;\nDescription: Maximum number of change events to publish for each poll cycle.
neo4j.start-from=Type: Enum<EARLIEST, NOW, USER_PROVIDED>;\nDescription: A time anchor to start streaming from.
neo4j.start-from.value=Type: STRING|LONG;\nDescription: Custom value to use as a starting offset. \
  Used once during the initial run of the connector, and will be ignored if there is an offset stored in Kafka Connect.
neo4j.ignore-stored-offset=Type: Boolean;\nDescription: Whether to ignore any offset value retrieved from the offset storage saved by a previous run.
neo4j.query=Type: String;\nDescription: Cypher query to use for gathering changes. \
  Requires both `neo4j.query.streaming-property` to be in the result set, and `$lastCheck` query parameter used for tracking changes.
neo4j.query.streaming-property=Type: String;\nDescription: Property name that is both present in the result set of the specified query \
  and used as a filter to query changes from a previous value.
neo4j.query.poll-duration=Type: String;\nDescription: Maximum amount of time Kafka Connect poll request will wait for a change to be received from the database (valid units are: `ms`, `s`, `m`, `h` and `d`; default unit is `s`).
neo4j.query.poll-interval=Type: String;\nDescription: Interval in which the query is executed during `neo4j.query.poll-duration` timespan (valid units are: `ms`, `s`, `m`, `h` and `d`; default unit is `s`).
neo4j.query.topic=Type: String;\nDescription: Kafka topic to publish change events gathered through provided query.
neo4j.query.timeout=Type: Duration;\nDescription: Maximum amount of time query is allowed to run (valid units are: `ms`, `s`, `m`, `h` and `d`; default unit is `s`).
neo4j.cdc.poll-duration=Type: Duration;\nDescription: Maximum amount of time Kafka Connect poll request will wait for a change to be received from the database (valid units are: `ms`, `s`, `m`, `h` and `d`; default unit is `s`).
neo4j.cdc.poll-interval=Type: Duration;\nDescription: The interval in which the database will be polled for changes (valid units are: `ms`, `s`, `m`, `h` and `d`; default unit is `s`).
neo4j.payload-mode=Type: Enum<COMPACT, EXTENDED>;\nDescription: Defines the structure of change messages generated. `COMPACT` produces messages which are simpler but with potential schema compatibility and type safety issues, while `EXTENDED` produces messages with extra type information which removes the limitations of `COMPACT` mode. For example, a property type change will lead to schema compatibility failures in `COMPACT` mode. Default is `EXTENDED`.
