##
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
##
## Connection Properties
neo4j.stream-from=Type: Enum<ALL, NOW, LAST_COMMITTED>;\nDescription: A time anchor to start streaming from.
neo4j.source-strategy=Type: Enum<QUERY>;\nDescription: Source strategy for this connector.
neo4j.query=Type: String;\nDescription: Cypher query to gather changes. Requires both `neo4j.query.streaming-property` to be in the result set, and `$lastCheck` query parameter for tracking changes.
neo4j.query.streaming-property=Type: String;\nDescription: Property name that is both present in the result set of the specified query and used as a filter to query changes from a previous value.
neo4j.query.poll-interval=Type: String;\nDescription: Interval in which the query is executed.
topic=Type: String;\nDescription: Kafka topic to push gathered change messages.
neo4j.enforce-schema=Type: Boolean;\nDescription: Whether to attach schema to produced change messages.
neo4j.query.batch-size=Type: Integer;\nDescription: Max number of messages pushed for each poll cycle.
neo4j.query.timeout=Type: Duration;\nDescription: Maximum amount of time source query is allowed to run.
